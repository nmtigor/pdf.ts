export { c as default };
declare function c(t?: string, e?: {}): {
    _url: string;
    _options: {};
    _config: {
        options: {};
        errorType: string;
        polyfills: {};
        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
    };
    _catchers: Map<any, any>;
    _resolvers: never[];
    _deferred: never[];
    _middlewares: never[];
    _addons: never[];
    addon(t: any): any;
    errorType(t: any): {
        _config: {
            errorType: any;
            options: {};
            polyfills: {};
            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
        };
        _url: string;
        _options: {};
        _catchers: Map<any, any>;
        _resolvers: never[];
        _deferred: never[];
        _middlewares: never[];
        _addons: never[];
        addon(t: any): any;
        errorType(t: any): any;
        polyfills(t: any, e?: number): {
            _config: {
                polyfills: any;
                options: {};
                errorType: string;
                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
            };
            _url: string;
            _options: {};
            _catchers: Map<any, any>;
            _resolvers: never[];
            _deferred: never[];
            _middlewares: never[];
            _addons: never[];
            addon(t: any): any;
            errorType(t: any): any;
            polyfills(t: any, e?: number): any;
            url(t: any, e?: number): {
                _url: any;
                _options: {};
                _config: {
                    options: {};
                    errorType: string;
                    polyfills: {};
                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                };
                _catchers: Map<any, any>;
                _resolvers: never[];
                _deferred: never[];
                _middlewares: never[];
                _addons: never[];
                addon(t: any): any;
                errorType(t: any): any;
                polyfills(t: any, e?: number): any;
                url(t: any, e?: number): any;
                options(t: any, e?: number): {
                    _options: any;
                    _url: string;
                    _config: {
                        options: {};
                        errorType: string;
                        polyfills: {};
                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                    };
                    _catchers: Map<any, any>;
                    _resolvers: never[];
                    _deferred: never[];
                    _middlewares: never[];
                    _addons: never[];
                    addon(t: any): any;
                    errorType(t: any): any;
                    polyfills(t: any, e?: number): any;
                    url(t: any, e?: number): any;
                    options(t: any, e?: number): any;
                    headers(t: any): {
                        _options: any;
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): {
                            _catchers: Map<any, any>;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): {
                                _resolvers: any[];
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): {
                                    _deferred: any[];
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): {
                                        _middlewares: any;
                                        _url: string;
                                        _options: {};
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): {
                                            _options: {
                                                body: any;
                                            };
                                            _url: string;
                                            _config: {
                                                options: {};
                                                errorType: string;
                                                polyfills: {};
                                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                            };
                                            _catchers: Map<any, any>;
                                            _resolvers: never[];
                                            _deferred: never[];
                                            _middlewares: never[];
                                            _addons: never[];
                                            addon(t: any): any;
                                            errorType(t: any): any;
                                            polyfills(t: any, e?: number): any;
                                            url(t: any, e?: number): any;
                                            options(t: any, e?: number): any;
                                            headers(t: any): any;
                                            accept(t: any): any;
                                            content(e: any): any;
                                            auth(t: any): any;
                                            catcher(t: any, e: any): any;
                                            catcherFallback(t: any): any;
                                            resolve(t: any, e?: number): any;
                                            defer(t: any, e?: number): any;
                                            middlewares(t: any, e?: number): any;
                                            fetch(t?: any, e?: string, r?: null): any;
                                            get(t?: string): any;
                                            delete(t?: string): any;
                                            put(t: any, e?: string): any;
                                            post(t: any, e?: string): any;
                                            patch(t: any, e?: string): any;
                                            head(t?: string): any;
                                            opts(t?: string): any;
                                            body(t: any): any;
                                            json(t: any, e: any): any;
                                        };
                                        json(t: any, e: any): {
                                            _options: {
                                                body: any;
                                            };
                                            _url: string;
                                            _config: {
                                                options: {};
                                                errorType: string;
                                                polyfills: {};
                                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                            };
                                            _catchers: Map<any, any>;
                                            _resolvers: never[];
                                            _deferred: never[];
                                            _middlewares: never[];
                                            _addons: never[];
                                            addon(t: any): any;
                                            errorType(t: any): any;
                                            polyfills(t: any, e?: number): any;
                                            url(t: any, e?: number): any;
                                            options(t: any, e?: number): any;
                                            headers(t: any): any;
                                            accept(t: any): any;
                                            content(e: any): any;
                                            auth(t: any): any;
                                            catcher(t: any, e: any): any;
                                            catcherFallback(t: any): any;
                                            resolve(t: any, e?: number): any;
                                            defer(t: any, e?: number): any;
                                            middlewares(t: any, e?: number): any;
                                            fetch(t?: any, e?: string, r?: null): any;
                                            get(t?: string): any;
                                            delete(t?: string): any;
                                            put(t: any, e?: string): any;
                                            post(t: any, e?: string): any;
                                            patch(t: any, e?: string): any;
                                            head(t?: string): any;
                                            opts(t?: string): any;
                                            body(t: any): any;
                                            json(t: any, e: any): any;
                                        };
                                    };
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                middlewares(t: any, e?: number): {
                                    _middlewares: any;
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            defer(t: any, e?: number): {
                                _deferred: any[];
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): {
                                    _middlewares: any;
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        catcherFallback(t: any): {
                            _catchers: Map<any, any>;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): {
                                _resolvers: any[];
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): {
                                    _deferred: any[];
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): {
                                        _middlewares: any;
                                        _url: string;
                                        _options: {};
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): {
                                            _options: {
                                                body: any;
                                            };
                                            _url: string;
                                            _config: {
                                                options: {};
                                                errorType: string;
                                                polyfills: {};
                                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                            };
                                            _catchers: Map<any, any>;
                                            _resolvers: never[];
                                            _deferred: never[];
                                            _middlewares: never[];
                                            _addons: never[];
                                            addon(t: any): any;
                                            errorType(t: any): any;
                                            polyfills(t: any, e?: number): any;
                                            url(t: any, e?: number): any;
                                            options(t: any, e?: number): any;
                                            headers(t: any): any;
                                            accept(t: any): any;
                                            content(e: any): any;
                                            auth(t: any): any;
                                            catcher(t: any, e: any): any;
                                            catcherFallback(t: any): any;
                                            resolve(t: any, e?: number): any;
                                            defer(t: any, e?: number): any;
                                            middlewares(t: any, e?: number): any;
                                            fetch(t?: any, e?: string, r?: null): any;
                                            get(t?: string): any;
                                            delete(t?: string): any;
                                            put(t: any, e?: string): any;
                                            post(t: any, e?: string): any;
                                            patch(t: any, e?: string): any;
                                            head(t?: string): any;
                                            opts(t?: string): any;
                                            body(t: any): any;
                                            json(t: any, e: any): any;
                                        };
                                        json(t: any, e: any): {
                                            _options: {
                                                body: any;
                                            };
                                            _url: string;
                                            _config: {
                                                options: {};
                                                errorType: string;
                                                polyfills: {};
                                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                            };
                                            _catchers: Map<any, any>;
                                            _resolvers: never[];
                                            _deferred: never[];
                                            _middlewares: never[];
                                            _addons: never[];
                                            addon(t: any): any;
                                            errorType(t: any): any;
                                            polyfills(t: any, e?: number): any;
                                            url(t: any, e?: number): any;
                                            options(t: any, e?: number): any;
                                            headers(t: any): any;
                                            accept(t: any): any;
                                            content(e: any): any;
                                            auth(t: any): any;
                                            catcher(t: any, e: any): any;
                                            catcherFallback(t: any): any;
                                            resolve(t: any, e?: number): any;
                                            defer(t: any, e?: number): any;
                                            middlewares(t: any, e?: number): any;
                                            fetch(t?: any, e?: string, r?: null): any;
                                            get(t?: string): any;
                                            delete(t?: string): any;
                                            put(t: any, e?: string): any;
                                            post(t: any, e?: string): any;
                                            patch(t: any, e?: string): any;
                                            head(t?: string): any;
                                            opts(t?: string): any;
                                            body(t: any): any;
                                            json(t: any, e: any): any;
                                        };
                                    };
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                middlewares(t: any, e?: number): {
                                    _middlewares: any;
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            defer(t: any, e?: number): {
                                _deferred: any[];
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): {
                                    _middlewares: any;
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        resolve(t: any, e?: number): {
                            _resolvers: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): {
                                _deferred: any[];
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): {
                                    _middlewares: any;
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        defer(t: any, e?: number): {
                            _deferred: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    accept(t: any): {
                        _options: any;
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): {
                            _catchers: Map<any, any>;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): {
                                _resolvers: any[];
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): {
                                    _deferred: any[];
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): {
                                        _middlewares: any;
                                        _url: string;
                                        _options: {};
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): {
                                            _options: {
                                                body: any;
                                            };
                                            _url: string;
                                            _config: {
                                                options: {};
                                                errorType: string;
                                                polyfills: {};
                                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                            };
                                            _catchers: Map<any, any>;
                                            _resolvers: never[];
                                            _deferred: never[];
                                            _middlewares: never[];
                                            _addons: never[];
                                            addon(t: any): any;
                                            errorType(t: any): any;
                                            polyfills(t: any, e?: number): any;
                                            url(t: any, e?: number): any;
                                            options(t: any, e?: number): any;
                                            headers(t: any): any;
                                            accept(t: any): any;
                                            content(e: any): any;
                                            auth(t: any): any;
                                            catcher(t: any, e: any): any;
                                            catcherFallback(t: any): any;
                                            resolve(t: any, e?: number): any;
                                            defer(t: any, e?: number): any;
                                            middlewares(t: any, e?: number): any;
                                            fetch(t?: any, e?: string, r?: null): any;
                                            get(t?: string): any;
                                            delete(t?: string): any;
                                            put(t: any, e?: string): any;
                                            post(t: any, e?: string): any;
                                            patch(t: any, e?: string): any;
                                            head(t?: string): any;
                                            opts(t?: string): any;
                                            body(t: any): any;
                                            json(t: any, e: any): any;
                                        };
                                        json(t: any, e: any): {
                                            _options: {
                                                body: any;
                                            };
                                            _url: string;
                                            _config: {
                                                options: {};
                                                errorType: string;
                                                polyfills: {};
                                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                            };
                                            _catchers: Map<any, any>;
                                            _resolvers: never[];
                                            _deferred: never[];
                                            _middlewares: never[];
                                            _addons: never[];
                                            addon(t: any): any;
                                            errorType(t: any): any;
                                            polyfills(t: any, e?: number): any;
                                            url(t: any, e?: number): any;
                                            options(t: any, e?: number): any;
                                            headers(t: any): any;
                                            accept(t: any): any;
                                            content(e: any): any;
                                            auth(t: any): any;
                                            catcher(t: any, e: any): any;
                                            catcherFallback(t: any): any;
                                            resolve(t: any, e?: number): any;
                                            defer(t: any, e?: number): any;
                                            middlewares(t: any, e?: number): any;
                                            fetch(t?: any, e?: string, r?: null): any;
                                            get(t?: string): any;
                                            delete(t?: string): any;
                                            put(t: any, e?: string): any;
                                            post(t: any, e?: string): any;
                                            patch(t: any, e?: string): any;
                                            head(t?: string): any;
                                            opts(t?: string): any;
                                            body(t: any): any;
                                            json(t: any, e: any): any;
                                        };
                                    };
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                middlewares(t: any, e?: number): {
                                    _middlewares: any;
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            defer(t: any, e?: number): {
                                _deferred: any[];
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): {
                                    _middlewares: any;
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        catcherFallback(t: any): {
                            _catchers: Map<any, any>;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): {
                                _resolvers: any[];
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): {
                                    _deferred: any[];
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): {
                                        _middlewares: any;
                                        _url: string;
                                        _options: {};
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): {
                                            _options: {
                                                body: any;
                                            };
                                            _url: string;
                                            _config: {
                                                options: {};
                                                errorType: string;
                                                polyfills: {};
                                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                            };
                                            _catchers: Map<any, any>;
                                            _resolvers: never[];
                                            _deferred: never[];
                                            _middlewares: never[];
                                            _addons: never[];
                                            addon(t: any): any;
                                            errorType(t: any): any;
                                            polyfills(t: any, e?: number): any;
                                            url(t: any, e?: number): any;
                                            options(t: any, e?: number): any;
                                            headers(t: any): any;
                                            accept(t: any): any;
                                            content(e: any): any;
                                            auth(t: any): any;
                                            catcher(t: any, e: any): any;
                                            catcherFallback(t: any): any;
                                            resolve(t: any, e?: number): any;
                                            defer(t: any, e?: number): any;
                                            middlewares(t: any, e?: number): any;
                                            fetch(t?: any, e?: string, r?: null): any;
                                            get(t?: string): any;
                                            delete(t?: string): any;
                                            put(t: any, e?: string): any;
                                            post(t: any, e?: string): any;
                                            patch(t: any, e?: string): any;
                                            head(t?: string): any;
                                            opts(t?: string): any;
                                            body(t: any): any;
                                            json(t: any, e: any): any;
                                        };
                                        json(t: any, e: any): {
                                            _options: {
                                                body: any;
                                            };
                                            _url: string;
                                            _config: {
                                                options: {};
                                                errorType: string;
                                                polyfills: {};
                                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                            };
                                            _catchers: Map<any, any>;
                                            _resolvers: never[];
                                            _deferred: never[];
                                            _middlewares: never[];
                                            _addons: never[];
                                            addon(t: any): any;
                                            errorType(t: any): any;
                                            polyfills(t: any, e?: number): any;
                                            url(t: any, e?: number): any;
                                            options(t: any, e?: number): any;
                                            headers(t: any): any;
                                            accept(t: any): any;
                                            content(e: any): any;
                                            auth(t: any): any;
                                            catcher(t: any, e: any): any;
                                            catcherFallback(t: any): any;
                                            resolve(t: any, e?: number): any;
                                            defer(t: any, e?: number): any;
                                            middlewares(t: any, e?: number): any;
                                            fetch(t?: any, e?: string, r?: null): any;
                                            get(t?: string): any;
                                            delete(t?: string): any;
                                            put(t: any, e?: string): any;
                                            post(t: any, e?: string): any;
                                            patch(t: any, e?: string): any;
                                            head(t?: string): any;
                                            opts(t?: string): any;
                                            body(t: any): any;
                                            json(t: any, e: any): any;
                                        };
                                    };
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                middlewares(t: any, e?: number): {
                                    _middlewares: any;
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            defer(t: any, e?: number): {
                                _deferred: any[];
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): {
                                    _middlewares: any;
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        resolve(t: any, e?: number): {
                            _resolvers: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): {
                                _deferred: any[];
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): {
                                    _middlewares: any;
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        defer(t: any, e?: number): {
                            _deferred: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    content(e: any): {
                        _options: any;
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): {
                            _catchers: Map<any, any>;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): {
                                _resolvers: any[];
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): {
                                    _deferred: any[];
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): {
                                        _middlewares: any;
                                        _url: string;
                                        _options: {};
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): {
                                            _options: {
                                                body: any;
                                            };
                                            _url: string;
                                            _config: {
                                                options: {};
                                                errorType: string;
                                                polyfills: {};
                                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                            };
                                            _catchers: Map<any, any>;
                                            _resolvers: never[];
                                            _deferred: never[];
                                            _middlewares: never[];
                                            _addons: never[];
                                            addon(t: any): any;
                                            errorType(t: any): any;
                                            polyfills(t: any, e?: number): any;
                                            url(t: any, e?: number): any;
                                            options(t: any, e?: number): any;
                                            headers(t: any): any;
                                            accept(t: any): any;
                                            content(e: any): any;
                                            auth(t: any): any;
                                            catcher(t: any, e: any): any;
                                            catcherFallback(t: any): any;
                                            resolve(t: any, e?: number): any;
                                            defer(t: any, e?: number): any;
                                            middlewares(t: any, e?: number): any;
                                            fetch(t?: any, e?: string, r?: null): any;
                                            get(t?: string): any;
                                            delete(t?: string): any;
                                            put(t: any, e?: string): any;
                                            post(t: any, e?: string): any;
                                            patch(t: any, e?: string): any;
                                            head(t?: string): any;
                                            opts(t?: string): any;
                                            body(t: any): any;
                                            json(t: any, e: any): any;
                                        };
                                        json(t: any, e: any): {
                                            _options: {
                                                body: any;
                                            };
                                            _url: string;
                                            _config: {
                                                options: {};
                                                errorType: string;
                                                polyfills: {};
                                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                            };
                                            _catchers: Map<any, any>;
                                            _resolvers: never[];
                                            _deferred: never[];
                                            _middlewares: never[];
                                            _addons: never[];
                                            addon(t: any): any;
                                            errorType(t: any): any;
                                            polyfills(t: any, e?: number): any;
                                            url(t: any, e?: number): any;
                                            options(t: any, e?: number): any;
                                            headers(t: any): any;
                                            accept(t: any): any;
                                            content(e: any): any;
                                            auth(t: any): any;
                                            catcher(t: any, e: any): any;
                                            catcherFallback(t: any): any;
                                            resolve(t: any, e?: number): any;
                                            defer(t: any, e?: number): any;
                                            middlewares(t: any, e?: number): any;
                                            fetch(t?: any, e?: string, r?: null): any;
                                            get(t?: string): any;
                                            delete(t?: string): any;
                                            put(t: any, e?: string): any;
                                            post(t: any, e?: string): any;
                                            patch(t: any, e?: string): any;
                                            head(t?: string): any;
                                            opts(t?: string): any;
                                            body(t: any): any;
                                            json(t: any, e: any): any;
                                        };
                                    };
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                middlewares(t: any, e?: number): {
                                    _middlewares: any;
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            defer(t: any, e?: number): {
                                _deferred: any[];
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): {
                                    _middlewares: any;
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        catcherFallback(t: any): {
                            _catchers: Map<any, any>;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): {
                                _resolvers: any[];
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): {
                                    _deferred: any[];
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): {
                                        _middlewares: any;
                                        _url: string;
                                        _options: {};
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): {
                                            _options: {
                                                body: any;
                                            };
                                            _url: string;
                                            _config: {
                                                options: {};
                                                errorType: string;
                                                polyfills: {};
                                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                            };
                                            _catchers: Map<any, any>;
                                            _resolvers: never[];
                                            _deferred: never[];
                                            _middlewares: never[];
                                            _addons: never[];
                                            addon(t: any): any;
                                            errorType(t: any): any;
                                            polyfills(t: any, e?: number): any;
                                            url(t: any, e?: number): any;
                                            options(t: any, e?: number): any;
                                            headers(t: any): any;
                                            accept(t: any): any;
                                            content(e: any): any;
                                            auth(t: any): any;
                                            catcher(t: any, e: any): any;
                                            catcherFallback(t: any): any;
                                            resolve(t: any, e?: number): any;
                                            defer(t: any, e?: number): any;
                                            middlewares(t: any, e?: number): any;
                                            fetch(t?: any, e?: string, r?: null): any;
                                            get(t?: string): any;
                                            delete(t?: string): any;
                                            put(t: any, e?: string): any;
                                            post(t: any, e?: string): any;
                                            patch(t: any, e?: string): any;
                                            head(t?: string): any;
                                            opts(t?: string): any;
                                            body(t: any): any;
                                            json(t: any, e: any): any;
                                        };
                                        json(t: any, e: any): {
                                            _options: {
                                                body: any;
                                            };
                                            _url: string;
                                            _config: {
                                                options: {};
                                                errorType: string;
                                                polyfills: {};
                                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                            };
                                            _catchers: Map<any, any>;
                                            _resolvers: never[];
                                            _deferred: never[];
                                            _middlewares: never[];
                                            _addons: never[];
                                            addon(t: any): any;
                                            errorType(t: any): any;
                                            polyfills(t: any, e?: number): any;
                                            url(t: any, e?: number): any;
                                            options(t: any, e?: number): any;
                                            headers(t: any): any;
                                            accept(t: any): any;
                                            content(e: any): any;
                                            auth(t: any): any;
                                            catcher(t: any, e: any): any;
                                            catcherFallback(t: any): any;
                                            resolve(t: any, e?: number): any;
                                            defer(t: any, e?: number): any;
                                            middlewares(t: any, e?: number): any;
                                            fetch(t?: any, e?: string, r?: null): any;
                                            get(t?: string): any;
                                            delete(t?: string): any;
                                            put(t: any, e?: string): any;
                                            post(t: any, e?: string): any;
                                            patch(t: any, e?: string): any;
                                            head(t?: string): any;
                                            opts(t?: string): any;
                                            body(t: any): any;
                                            json(t: any, e: any): any;
                                        };
                                    };
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                middlewares(t: any, e?: number): {
                                    _middlewares: any;
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            defer(t: any, e?: number): {
                                _deferred: any[];
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): {
                                    _middlewares: any;
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        resolve(t: any, e?: number): {
                            _resolvers: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): {
                                _deferred: any[];
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): {
                                    _middlewares: any;
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        defer(t: any, e?: number): {
                            _deferred: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    auth(t: any): {
                        _options: any;
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): {
                            _catchers: Map<any, any>;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): {
                                _resolvers: any[];
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): {
                                    _deferred: any[];
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): {
                                        _middlewares: any;
                                        _url: string;
                                        _options: {};
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): {
                                            _options: {
                                                body: any;
                                            };
                                            _url: string;
                                            _config: {
                                                options: {};
                                                errorType: string;
                                                polyfills: {};
                                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                            };
                                            _catchers: Map<any, any>;
                                            _resolvers: never[];
                                            _deferred: never[];
                                            _middlewares: never[];
                                            _addons: never[];
                                            addon(t: any): any;
                                            errorType(t: any): any;
                                            polyfills(t: any, e?: number): any;
                                            url(t: any, e?: number): any;
                                            options(t: any, e?: number): any;
                                            headers(t: any): any;
                                            accept(t: any): any;
                                            content(e: any): any;
                                            auth(t: any): any;
                                            catcher(t: any, e: any): any;
                                            catcherFallback(t: any): any;
                                            resolve(t: any, e?: number): any;
                                            defer(t: any, e?: number): any;
                                            middlewares(t: any, e?: number): any;
                                            fetch(t?: any, e?: string, r?: null): any;
                                            get(t?: string): any;
                                            delete(t?: string): any;
                                            put(t: any, e?: string): any;
                                            post(t: any, e?: string): any;
                                            patch(t: any, e?: string): any;
                                            head(t?: string): any;
                                            opts(t?: string): any;
                                            body(t: any): any;
                                            json(t: any, e: any): any;
                                        };
                                        json(t: any, e: any): {
                                            _options: {
                                                body: any;
                                            };
                                            _url: string;
                                            _config: {
                                                options: {};
                                                errorType: string;
                                                polyfills: {};
                                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                            };
                                            _catchers: Map<any, any>;
                                            _resolvers: never[];
                                            _deferred: never[];
                                            _middlewares: never[];
                                            _addons: never[];
                                            addon(t: any): any;
                                            errorType(t: any): any;
                                            polyfills(t: any, e?: number): any;
                                            url(t: any, e?: number): any;
                                            options(t: any, e?: number): any;
                                            headers(t: any): any;
                                            accept(t: any): any;
                                            content(e: any): any;
                                            auth(t: any): any;
                                            catcher(t: any, e: any): any;
                                            catcherFallback(t: any): any;
                                            resolve(t: any, e?: number): any;
                                            defer(t: any, e?: number): any;
                                            middlewares(t: any, e?: number): any;
                                            fetch(t?: any, e?: string, r?: null): any;
                                            get(t?: string): any;
                                            delete(t?: string): any;
                                            put(t: any, e?: string): any;
                                            post(t: any, e?: string): any;
                                            patch(t: any, e?: string): any;
                                            head(t?: string): any;
                                            opts(t?: string): any;
                                            body(t: any): any;
                                            json(t: any, e: any): any;
                                        };
                                    };
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                middlewares(t: any, e?: number): {
                                    _middlewares: any;
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            defer(t: any, e?: number): {
                                _deferred: any[];
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): {
                                    _middlewares: any;
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        catcherFallback(t: any): {
                            _catchers: Map<any, any>;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): {
                                _resolvers: any[];
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): {
                                    _deferred: any[];
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): {
                                        _middlewares: any;
                                        _url: string;
                                        _options: {};
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): {
                                            _options: {
                                                body: any;
                                            };
                                            _url: string;
                                            _config: {
                                                options: {};
                                                errorType: string;
                                                polyfills: {};
                                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                            };
                                            _catchers: Map<any, any>;
                                            _resolvers: never[];
                                            _deferred: never[];
                                            _middlewares: never[];
                                            _addons: never[];
                                            addon(t: any): any;
                                            errorType(t: any): any;
                                            polyfills(t: any, e?: number): any;
                                            url(t: any, e?: number): any;
                                            options(t: any, e?: number): any;
                                            headers(t: any): any;
                                            accept(t: any): any;
                                            content(e: any): any;
                                            auth(t: any): any;
                                            catcher(t: any, e: any): any;
                                            catcherFallback(t: any): any;
                                            resolve(t: any, e?: number): any;
                                            defer(t: any, e?: number): any;
                                            middlewares(t: any, e?: number): any;
                                            fetch(t?: any, e?: string, r?: null): any;
                                            get(t?: string): any;
                                            delete(t?: string): any;
                                            put(t: any, e?: string): any;
                                            post(t: any, e?: string): any;
                                            patch(t: any, e?: string): any;
                                            head(t?: string): any;
                                            opts(t?: string): any;
                                            body(t: any): any;
                                            json(t: any, e: any): any;
                                        };
                                        json(t: any, e: any): {
                                            _options: {
                                                body: any;
                                            };
                                            _url: string;
                                            _config: {
                                                options: {};
                                                errorType: string;
                                                polyfills: {};
                                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                            };
                                            _catchers: Map<any, any>;
                                            _resolvers: never[];
                                            _deferred: never[];
                                            _middlewares: never[];
                                            _addons: never[];
                                            addon(t: any): any;
                                            errorType(t: any): any;
                                            polyfills(t: any, e?: number): any;
                                            url(t: any, e?: number): any;
                                            options(t: any, e?: number): any;
                                            headers(t: any): any;
                                            accept(t: any): any;
                                            content(e: any): any;
                                            auth(t: any): any;
                                            catcher(t: any, e: any): any;
                                            catcherFallback(t: any): any;
                                            resolve(t: any, e?: number): any;
                                            defer(t: any, e?: number): any;
                                            middlewares(t: any, e?: number): any;
                                            fetch(t?: any, e?: string, r?: null): any;
                                            get(t?: string): any;
                                            delete(t?: string): any;
                                            put(t: any, e?: string): any;
                                            post(t: any, e?: string): any;
                                            patch(t: any, e?: string): any;
                                            head(t?: string): any;
                                            opts(t?: string): any;
                                            body(t: any): any;
                                            json(t: any, e: any): any;
                                        };
                                    };
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                middlewares(t: any, e?: number): {
                                    _middlewares: any;
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            defer(t: any, e?: number): {
                                _deferred: any[];
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): {
                                    _middlewares: any;
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        resolve(t: any, e?: number): {
                            _resolvers: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): {
                                _deferred: any[];
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): {
                                    _middlewares: any;
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        defer(t: any, e?: number): {
                            _deferred: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    catcher(t: any, e: any): {
                        _catchers: Map<any, any>;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): {
                            _resolvers: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): {
                                _deferred: any[];
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): {
                                    _middlewares: any;
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        defer(t: any, e?: number): {
                            _deferred: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    catcherFallback(t: any): {
                        _catchers: Map<any, any>;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): {
                            _resolvers: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): {
                                _deferred: any[];
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): {
                                    _middlewares: any;
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        defer(t: any, e?: number): {
                            _deferred: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    resolve(t: any, e?: number): {
                        _resolvers: any[];
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): {
                            _deferred: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    defer(t: any, e?: number): {
                        _deferred: any[];
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    middlewares(t: any, e?: number): {
                        _middlewares: any;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    fetch(t?: any, e?: string, r?: null): any;
                    get(t?: string): any;
                    delete(t?: string): any;
                    put(t: any, e?: string): any;
                    post(t: any, e?: string): any;
                    patch(t: any, e?: string): any;
                    head(t?: string): any;
                    opts(t?: string): any;
                    body(t: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                    json(t: any, e: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                };
                headers(t: any): {
                    _options: any;
                    _url: string;
                    _config: {
                        options: {};
                        errorType: string;
                        polyfills: {};
                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                    };
                    _catchers: Map<any, any>;
                    _resolvers: never[];
                    _deferred: never[];
                    _middlewares: never[];
                    _addons: never[];
                    addon(t: any): any;
                    errorType(t: any): any;
                    polyfills(t: any, e?: number): any;
                    url(t: any, e?: number): any;
                    options(t: any, e?: number): any;
                    headers(t: any): any;
                    accept(t: any): any;
                    content(e: any): any;
                    auth(t: any): any;
                    catcher(t: any, e: any): {
                        _catchers: Map<any, any>;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): {
                            _resolvers: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): {
                                _deferred: any[];
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): {
                                    _middlewares: any;
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        defer(t: any, e?: number): {
                            _deferred: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    catcherFallback(t: any): {
                        _catchers: Map<any, any>;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): {
                            _resolvers: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): {
                                _deferred: any[];
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): {
                                    _middlewares: any;
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        defer(t: any, e?: number): {
                            _deferred: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    resolve(t: any, e?: number): {
                        _resolvers: any[];
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): {
                            _deferred: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    defer(t: any, e?: number): {
                        _deferred: any[];
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    middlewares(t: any, e?: number): {
                        _middlewares: any;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    fetch(t?: any, e?: string, r?: null): any;
                    get(t?: string): any;
                    delete(t?: string): any;
                    put(t: any, e?: string): any;
                    post(t: any, e?: string): any;
                    patch(t: any, e?: string): any;
                    head(t?: string): any;
                    opts(t?: string): any;
                    body(t: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                    json(t: any, e: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                };
                accept(t: any): {
                    _options: any;
                    _url: string;
                    _config: {
                        options: {};
                        errorType: string;
                        polyfills: {};
                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                    };
                    _catchers: Map<any, any>;
                    _resolvers: never[];
                    _deferred: never[];
                    _middlewares: never[];
                    _addons: never[];
                    addon(t: any): any;
                    errorType(t: any): any;
                    polyfills(t: any, e?: number): any;
                    url(t: any, e?: number): any;
                    options(t: any, e?: number): any;
                    headers(t: any): any;
                    accept(t: any): any;
                    content(e: any): any;
                    auth(t: any): any;
                    catcher(t: any, e: any): {
                        _catchers: Map<any, any>;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): {
                            _resolvers: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): {
                                _deferred: any[];
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): {
                                    _middlewares: any;
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        defer(t: any, e?: number): {
                            _deferred: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    catcherFallback(t: any): {
                        _catchers: Map<any, any>;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): {
                            _resolvers: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): {
                                _deferred: any[];
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): {
                                    _middlewares: any;
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        defer(t: any, e?: number): {
                            _deferred: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    resolve(t: any, e?: number): {
                        _resolvers: any[];
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): {
                            _deferred: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    defer(t: any, e?: number): {
                        _deferred: any[];
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    middlewares(t: any, e?: number): {
                        _middlewares: any;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    fetch(t?: any, e?: string, r?: null): any;
                    get(t?: string): any;
                    delete(t?: string): any;
                    put(t: any, e?: string): any;
                    post(t: any, e?: string): any;
                    patch(t: any, e?: string): any;
                    head(t?: string): any;
                    opts(t?: string): any;
                    body(t: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                    json(t: any, e: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                };
                content(e: any): {
                    _options: any;
                    _url: string;
                    _config: {
                        options: {};
                        errorType: string;
                        polyfills: {};
                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                    };
                    _catchers: Map<any, any>;
                    _resolvers: never[];
                    _deferred: never[];
                    _middlewares: never[];
                    _addons: never[];
                    addon(t: any): any;
                    errorType(t: any): any;
                    polyfills(t: any, e?: number): any;
                    url(t: any, e?: number): any;
                    options(t: any, e?: number): any;
                    headers(t: any): any;
                    accept(t: any): any;
                    content(e: any): any;
                    auth(t: any): any;
                    catcher(t: any, e: any): {
                        _catchers: Map<any, any>;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): {
                            _resolvers: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): {
                                _deferred: any[];
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): {
                                    _middlewares: any;
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        defer(t: any, e?: number): {
                            _deferred: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    catcherFallback(t: any): {
                        _catchers: Map<any, any>;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): {
                            _resolvers: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): {
                                _deferred: any[];
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): {
                                    _middlewares: any;
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        defer(t: any, e?: number): {
                            _deferred: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    resolve(t: any, e?: number): {
                        _resolvers: any[];
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): {
                            _deferred: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    defer(t: any, e?: number): {
                        _deferred: any[];
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    middlewares(t: any, e?: number): {
                        _middlewares: any;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    fetch(t?: any, e?: string, r?: null): any;
                    get(t?: string): any;
                    delete(t?: string): any;
                    put(t: any, e?: string): any;
                    post(t: any, e?: string): any;
                    patch(t: any, e?: string): any;
                    head(t?: string): any;
                    opts(t?: string): any;
                    body(t: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                    json(t: any, e: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                };
                auth(t: any): {
                    _options: any;
                    _url: string;
                    _config: {
                        options: {};
                        errorType: string;
                        polyfills: {};
                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                    };
                    _catchers: Map<any, any>;
                    _resolvers: never[];
                    _deferred: never[];
                    _middlewares: never[];
                    _addons: never[];
                    addon(t: any): any;
                    errorType(t: any): any;
                    polyfills(t: any, e?: number): any;
                    url(t: any, e?: number): any;
                    options(t: any, e?: number): any;
                    headers(t: any): any;
                    accept(t: any): any;
                    content(e: any): any;
                    auth(t: any): any;
                    catcher(t: any, e: any): {
                        _catchers: Map<any, any>;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): {
                            _resolvers: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): {
                                _deferred: any[];
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): {
                                    _middlewares: any;
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        defer(t: any, e?: number): {
                            _deferred: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    catcherFallback(t: any): {
                        _catchers: Map<any, any>;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): {
                            _resolvers: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): {
                                _deferred: any[];
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): {
                                    _middlewares: any;
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        defer(t: any, e?: number): {
                            _deferred: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    resolve(t: any, e?: number): {
                        _resolvers: any[];
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): {
                            _deferred: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    defer(t: any, e?: number): {
                        _deferred: any[];
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    middlewares(t: any, e?: number): {
                        _middlewares: any;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    fetch(t?: any, e?: string, r?: null): any;
                    get(t?: string): any;
                    delete(t?: string): any;
                    put(t: any, e?: string): any;
                    post(t: any, e?: string): any;
                    patch(t: any, e?: string): any;
                    head(t?: string): any;
                    opts(t?: string): any;
                    body(t: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                    json(t: any, e: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                };
                catcher(t: any, e: any): {
                    _catchers: Map<any, any>;
                    _url: string;
                    _options: {};
                    _config: {
                        options: {};
                        errorType: string;
                        polyfills: {};
                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                    };
                    _resolvers: never[];
                    _deferred: never[];
                    _middlewares: never[];
                    _addons: never[];
                    addon(t: any): any;
                    errorType(t: any): any;
                    polyfills(t: any, e?: number): any;
                    url(t: any, e?: number): any;
                    options(t: any, e?: number): any;
                    headers(t: any): any;
                    accept(t: any): any;
                    content(e: any): any;
                    auth(t: any): any;
                    catcher(t: any, e: any): any;
                    catcherFallback(t: any): any;
                    resolve(t: any, e?: number): {
                        _resolvers: any[];
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): {
                            _deferred: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    defer(t: any, e?: number): {
                        _deferred: any[];
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    middlewares(t: any, e?: number): {
                        _middlewares: any;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    fetch(t?: any, e?: string, r?: null): any;
                    get(t?: string): any;
                    delete(t?: string): any;
                    put(t: any, e?: string): any;
                    post(t: any, e?: string): any;
                    patch(t: any, e?: string): any;
                    head(t?: string): any;
                    opts(t?: string): any;
                    body(t: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                    json(t: any, e: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                };
                catcherFallback(t: any): {
                    _catchers: Map<any, any>;
                    _url: string;
                    _options: {};
                    _config: {
                        options: {};
                        errorType: string;
                        polyfills: {};
                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                    };
                    _resolvers: never[];
                    _deferred: never[];
                    _middlewares: never[];
                    _addons: never[];
                    addon(t: any): any;
                    errorType(t: any): any;
                    polyfills(t: any, e?: number): any;
                    url(t: any, e?: number): any;
                    options(t: any, e?: number): any;
                    headers(t: any): any;
                    accept(t: any): any;
                    content(e: any): any;
                    auth(t: any): any;
                    catcher(t: any, e: any): any;
                    catcherFallback(t: any): any;
                    resolve(t: any, e?: number): {
                        _resolvers: any[];
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): {
                            _deferred: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    defer(t: any, e?: number): {
                        _deferred: any[];
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    middlewares(t: any, e?: number): {
                        _middlewares: any;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    fetch(t?: any, e?: string, r?: null): any;
                    get(t?: string): any;
                    delete(t?: string): any;
                    put(t: any, e?: string): any;
                    post(t: any, e?: string): any;
                    patch(t: any, e?: string): any;
                    head(t?: string): any;
                    opts(t?: string): any;
                    body(t: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                    json(t: any, e: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                };
                resolve(t: any, e?: number): {
                    _resolvers: any[];
                    _url: string;
                    _options: {};
                    _config: {
                        options: {};
                        errorType: string;
                        polyfills: {};
                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                    };
                    _catchers: Map<any, any>;
                    _deferred: never[];
                    _middlewares: never[];
                    _addons: never[];
                    addon(t: any): any;
                    errorType(t: any): any;
                    polyfills(t: any, e?: number): any;
                    url(t: any, e?: number): any;
                    options(t: any, e?: number): any;
                    headers(t: any): any;
                    accept(t: any): any;
                    content(e: any): any;
                    auth(t: any): any;
                    catcher(t: any, e: any): any;
                    catcherFallback(t: any): any;
                    resolve(t: any, e?: number): any;
                    defer(t: any, e?: number): {
                        _deferred: any[];
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    middlewares(t: any, e?: number): {
                        _middlewares: any;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    fetch(t?: any, e?: string, r?: null): any;
                    get(t?: string): any;
                    delete(t?: string): any;
                    put(t: any, e?: string): any;
                    post(t: any, e?: string): any;
                    patch(t: any, e?: string): any;
                    head(t?: string): any;
                    opts(t?: string): any;
                    body(t: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                    json(t: any, e: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                };
                defer(t: any, e?: number): {
                    _deferred: any[];
                    _url: string;
                    _options: {};
                    _config: {
                        options: {};
                        errorType: string;
                        polyfills: {};
                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                    };
                    _catchers: Map<any, any>;
                    _resolvers: never[];
                    _middlewares: never[];
                    _addons: never[];
                    addon(t: any): any;
                    errorType(t: any): any;
                    polyfills(t: any, e?: number): any;
                    url(t: any, e?: number): any;
                    options(t: any, e?: number): any;
                    headers(t: any): any;
                    accept(t: any): any;
                    content(e: any): any;
                    auth(t: any): any;
                    catcher(t: any, e: any): any;
                    catcherFallback(t: any): any;
                    resolve(t: any, e?: number): any;
                    defer(t: any, e?: number): any;
                    middlewares(t: any, e?: number): {
                        _middlewares: any;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    fetch(t?: any, e?: string, r?: null): any;
                    get(t?: string): any;
                    delete(t?: string): any;
                    put(t: any, e?: string): any;
                    post(t: any, e?: string): any;
                    patch(t: any, e?: string): any;
                    head(t?: string): any;
                    opts(t?: string): any;
                    body(t: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                    json(t: any, e: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                };
                middlewares(t: any, e?: number): {
                    _middlewares: any;
                    _url: string;
                    _options: {};
                    _config: {
                        options: {};
                        errorType: string;
                        polyfills: {};
                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                    };
                    _catchers: Map<any, any>;
                    _resolvers: never[];
                    _deferred: never[];
                    _addons: never[];
                    addon(t: any): any;
                    errorType(t: any): any;
                    polyfills(t: any, e?: number): any;
                    url(t: any, e?: number): any;
                    options(t: any, e?: number): any;
                    headers(t: any): any;
                    accept(t: any): any;
                    content(e: any): any;
                    auth(t: any): any;
                    catcher(t: any, e: any): any;
                    catcherFallback(t: any): any;
                    resolve(t: any, e?: number): any;
                    defer(t: any, e?: number): any;
                    middlewares(t: any, e?: number): any;
                    fetch(t?: any, e?: string, r?: null): any;
                    get(t?: string): any;
                    delete(t?: string): any;
                    put(t: any, e?: string): any;
                    post(t: any, e?: string): any;
                    patch(t: any, e?: string): any;
                    head(t?: string): any;
                    opts(t?: string): any;
                    body(t: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                    json(t: any, e: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                };
                fetch(t?: any, e?: string, r?: null): any;
                get(t?: string): any;
                delete(t?: string): any;
                put(t: any, e?: string): any;
                post(t: any, e?: string): any;
                patch(t: any, e?: string): any;
                head(t?: string): any;
                opts(t?: string): any;
                body(t: any): {
                    _options: {
                        body: any;
                    };
                    _url: string;
                    _config: {
                        options: {};
                        errorType: string;
                        polyfills: {};
                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                    };
                    _catchers: Map<any, any>;
                    _resolvers: never[];
                    _deferred: never[];
                    _middlewares: never[];
                    _addons: never[];
                    addon(t: any): any;
                    errorType(t: any): any;
                    polyfills(t: any, e?: number): any;
                    url(t: any, e?: number): any;
                    options(t: any, e?: number): any;
                    headers(t: any): any;
                    accept(t: any): any;
                    content(e: any): any;
                    auth(t: any): any;
                    catcher(t: any, e: any): any;
                    catcherFallback(t: any): any;
                    resolve(t: any, e?: number): any;
                    defer(t: any, e?: number): any;
                    middlewares(t: any, e?: number): any;
                    fetch(t?: any, e?: string, r?: null): any;
                    get(t?: string): any;
                    delete(t?: string): any;
                    put(t: any, e?: string): any;
                    post(t: any, e?: string): any;
                    patch(t: any, e?: string): any;
                    head(t?: string): any;
                    opts(t?: string): any;
                    body(t: any): any;
                    json(t: any, e: any): any;
                };
                json(t: any, e: any): {
                    _options: {
                        body: any;
                    };
                    _url: string;
                    _config: {
                        options: {};
                        errorType: string;
                        polyfills: {};
                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                    };
                    _catchers: Map<any, any>;
                    _resolvers: never[];
                    _deferred: never[];
                    _middlewares: never[];
                    _addons: never[];
                    addon(t: any): any;
                    errorType(t: any): any;
                    polyfills(t: any, e?: number): any;
                    url(t: any, e?: number): any;
                    options(t: any, e?: number): any;
                    headers(t: any): any;
                    accept(t: any): any;
                    content(e: any): any;
                    auth(t: any): any;
                    catcher(t: any, e: any): any;
                    catcherFallback(t: any): any;
                    resolve(t: any, e?: number): any;
                    defer(t: any, e?: number): any;
                    middlewares(t: any, e?: number): any;
                    fetch(t?: any, e?: string, r?: null): any;
                    get(t?: string): any;
                    delete(t?: string): any;
                    put(t: any, e?: string): any;
                    post(t: any, e?: string): any;
                    patch(t: any, e?: string): any;
                    head(t?: string): any;
                    opts(t?: string): any;
                    body(t: any): any;
                    json(t: any, e: any): any;
                };
            };
            options(t: any, e?: number): {
                _options: any;
                _url: string;
                _config: {
                    options: {};
                    errorType: string;
                    polyfills: {};
                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                };
                _catchers: Map<any, any>;
                _resolvers: never[];
                _deferred: never[];
                _middlewares: never[];
                _addons: never[];
                addon(t: any): any;
                errorType(t: any): any;
                polyfills(t: any, e?: number): any;
                url(t: any, e?: number): any;
                options(t: any, e?: number): any;
                headers(t: any): {
                    _options: any;
                    _url: string;
                    _config: {
                        options: {};
                        errorType: string;
                        polyfills: {};
                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                    };
                    _catchers: Map<any, any>;
                    _resolvers: never[];
                    _deferred: never[];
                    _middlewares: never[];
                    _addons: never[];
                    addon(t: any): any;
                    errorType(t: any): any;
                    polyfills(t: any, e?: number): any;
                    url(t: any, e?: number): any;
                    options(t: any, e?: number): any;
                    headers(t: any): any;
                    accept(t: any): any;
                    content(e: any): any;
                    auth(t: any): any;
                    catcher(t: any, e: any): {
                        _catchers: Map<any, any>;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): {
                            _resolvers: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): {
                                _deferred: any[];
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): {
                                    _middlewares: any;
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        defer(t: any, e?: number): {
                            _deferred: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    catcherFallback(t: any): {
                        _catchers: Map<any, any>;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): {
                            _resolvers: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): {
                                _deferred: any[];
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): {
                                    _middlewares: any;
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        defer(t: any, e?: number): {
                            _deferred: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    resolve(t: any, e?: number): {
                        _resolvers: any[];
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): {
                            _deferred: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    defer(t: any, e?: number): {
                        _deferred: any[];
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    middlewares(t: any, e?: number): {
                        _middlewares: any;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    fetch(t?: any, e?: string, r?: null): any;
                    get(t?: string): any;
                    delete(t?: string): any;
                    put(t: any, e?: string): any;
                    post(t: any, e?: string): any;
                    patch(t: any, e?: string): any;
                    head(t?: string): any;
                    opts(t?: string): any;
                    body(t: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                    json(t: any, e: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                };
                accept(t: any): {
                    _options: any;
                    _url: string;
                    _config: {
                        options: {};
                        errorType: string;
                        polyfills: {};
                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                    };
                    _catchers: Map<any, any>;
                    _resolvers: never[];
                    _deferred: never[];
                    _middlewares: never[];
                    _addons: never[];
                    addon(t: any): any;
                    errorType(t: any): any;
                    polyfills(t: any, e?: number): any;
                    url(t: any, e?: number): any;
                    options(t: any, e?: number): any;
                    headers(t: any): any;
                    accept(t: any): any;
                    content(e: any): any;
                    auth(t: any): any;
                    catcher(t: any, e: any): {
                        _catchers: Map<any, any>;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): {
                            _resolvers: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): {
                                _deferred: any[];
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): {
                                    _middlewares: any;
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        defer(t: any, e?: number): {
                            _deferred: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    catcherFallback(t: any): {
                        _catchers: Map<any, any>;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): {
                            _resolvers: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): {
                                _deferred: any[];
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): {
                                    _middlewares: any;
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        defer(t: any, e?: number): {
                            _deferred: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    resolve(t: any, e?: number): {
                        _resolvers: any[];
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): {
                            _deferred: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    defer(t: any, e?: number): {
                        _deferred: any[];
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    middlewares(t: any, e?: number): {
                        _middlewares: any;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    fetch(t?: any, e?: string, r?: null): any;
                    get(t?: string): any;
                    delete(t?: string): any;
                    put(t: any, e?: string): any;
                    post(t: any, e?: string): any;
                    patch(t: any, e?: string): any;
                    head(t?: string): any;
                    opts(t?: string): any;
                    body(t: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                    json(t: any, e: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                };
                content(e: any): {
                    _options: any;
                    _url: string;
                    _config: {
                        options: {};
                        errorType: string;
                        polyfills: {};
                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                    };
                    _catchers: Map<any, any>;
                    _resolvers: never[];
                    _deferred: never[];
                    _middlewares: never[];
                    _addons: never[];
                    addon(t: any): any;
                    errorType(t: any): any;
                    polyfills(t: any, e?: number): any;
                    url(t: any, e?: number): any;
                    options(t: any, e?: number): any;
                    headers(t: any): any;
                    accept(t: any): any;
                    content(e: any): any;
                    auth(t: any): any;
                    catcher(t: any, e: any): {
                        _catchers: Map<any, any>;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): {
                            _resolvers: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): {
                                _deferred: any[];
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): {
                                    _middlewares: any;
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        defer(t: any, e?: number): {
                            _deferred: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    catcherFallback(t: any): {
                        _catchers: Map<any, any>;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): {
                            _resolvers: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): {
                                _deferred: any[];
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): {
                                    _middlewares: any;
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        defer(t: any, e?: number): {
                            _deferred: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    resolve(t: any, e?: number): {
                        _resolvers: any[];
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): {
                            _deferred: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    defer(t: any, e?: number): {
                        _deferred: any[];
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    middlewares(t: any, e?: number): {
                        _middlewares: any;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    fetch(t?: any, e?: string, r?: null): any;
                    get(t?: string): any;
                    delete(t?: string): any;
                    put(t: any, e?: string): any;
                    post(t: any, e?: string): any;
                    patch(t: any, e?: string): any;
                    head(t?: string): any;
                    opts(t?: string): any;
                    body(t: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                    json(t: any, e: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                };
                auth(t: any): {
                    _options: any;
                    _url: string;
                    _config: {
                        options: {};
                        errorType: string;
                        polyfills: {};
                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                    };
                    _catchers: Map<any, any>;
                    _resolvers: never[];
                    _deferred: never[];
                    _middlewares: never[];
                    _addons: never[];
                    addon(t: any): any;
                    errorType(t: any): any;
                    polyfills(t: any, e?: number): any;
                    url(t: any, e?: number): any;
                    options(t: any, e?: number): any;
                    headers(t: any): any;
                    accept(t: any): any;
                    content(e: any): any;
                    auth(t: any): any;
                    catcher(t: any, e: any): {
                        _catchers: Map<any, any>;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): {
                            _resolvers: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): {
                                _deferred: any[];
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): {
                                    _middlewares: any;
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        defer(t: any, e?: number): {
                            _deferred: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    catcherFallback(t: any): {
                        _catchers: Map<any, any>;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): {
                            _resolvers: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): {
                                _deferred: any[];
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): {
                                    _middlewares: any;
                                    _url: string;
                                    _options: {};
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                    json(t: any, e: any): {
                                        _options: {
                                            body: any;
                                        };
                                        _url: string;
                                        _config: {
                                            options: {};
                                            errorType: string;
                                            polyfills: {};
                                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                        };
                                        _catchers: Map<any, any>;
                                        _resolvers: never[];
                                        _deferred: never[];
                                        _middlewares: never[];
                                        _addons: never[];
                                        addon(t: any): any;
                                        errorType(t: any): any;
                                        polyfills(t: any, e?: number): any;
                                        url(t: any, e?: number): any;
                                        options(t: any, e?: number): any;
                                        headers(t: any): any;
                                        accept(t: any): any;
                                        content(e: any): any;
                                        auth(t: any): any;
                                        catcher(t: any, e: any): any;
                                        catcherFallback(t: any): any;
                                        resolve(t: any, e?: number): any;
                                        defer(t: any, e?: number): any;
                                        middlewares(t: any, e?: number): any;
                                        fetch(t?: any, e?: string, r?: null): any;
                                        get(t?: string): any;
                                        delete(t?: string): any;
                                        put(t: any, e?: string): any;
                                        post(t: any, e?: string): any;
                                        patch(t: any, e?: string): any;
                                        head(t?: string): any;
                                        opts(t?: string): any;
                                        body(t: any): any;
                                        json(t: any, e: any): any;
                                    };
                                };
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        defer(t: any, e?: number): {
                            _deferred: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    resolve(t: any, e?: number): {
                        _resolvers: any[];
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): {
                            _deferred: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    defer(t: any, e?: number): {
                        _deferred: any[];
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    middlewares(t: any, e?: number): {
                        _middlewares: any;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    fetch(t?: any, e?: string, r?: null): any;
                    get(t?: string): any;
                    delete(t?: string): any;
                    put(t: any, e?: string): any;
                    post(t: any, e?: string): any;
                    patch(t: any, e?: string): any;
                    head(t?: string): any;
                    opts(t?: string): any;
                    body(t: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                    json(t: any, e: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                };
                catcher(t: any, e: any): {
                    _catchers: Map<any, any>;
                    _url: string;
                    _options: {};
                    _config: {
                        options: {};
                        errorType: string;
                        polyfills: {};
                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                    };
                    _resolvers: never[];
                    _deferred: never[];
                    _middlewares: never[];
                    _addons: never[];
                    addon(t: any): any;
                    errorType(t: any): any;
                    polyfills(t: any, e?: number): any;
                    url(t: any, e?: number): any;
                    options(t: any, e?: number): any;
                    headers(t: any): any;
                    accept(t: any): any;
                    content(e: any): any;
                    auth(t: any): any;
                    catcher(t: any, e: any): any;
                    catcherFallback(t: any): any;
                    resolve(t: any, e?: number): {
                        _resolvers: any[];
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): {
                            _deferred: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    defer(t: any, e?: number): {
                        _deferred: any[];
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    middlewares(t: any, e?: number): {
                        _middlewares: any;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    fetch(t?: any, e?: string, r?: null): any;
                    get(t?: string): any;
                    delete(t?: string): any;
                    put(t: any, e?: string): any;
                    post(t: any, e?: string): any;
                    patch(t: any, e?: string): any;
                    head(t?: string): any;
                    opts(t?: string): any;
                    body(t: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                    json(t: any, e: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                };
                catcherFallback(t: any): {
                    _catchers: Map<any, any>;
                    _url: string;
                    _options: {};
                    _config: {
                        options: {};
                        errorType: string;
                        polyfills: {};
                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                    };
                    _resolvers: never[];
                    _deferred: never[];
                    _middlewares: never[];
                    _addons: never[];
                    addon(t: any): any;
                    errorType(t: any): any;
                    polyfills(t: any, e?: number): any;
                    url(t: any, e?: number): any;
                    options(t: any, e?: number): any;
                    headers(t: any): any;
                    accept(t: any): any;
                    content(e: any): any;
                    auth(t: any): any;
                    catcher(t: any, e: any): any;
                    catcherFallback(t: any): any;
                    resolve(t: any, e?: number): {
                        _resolvers: any[];
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): {
                            _deferred: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    defer(t: any, e?: number): {
                        _deferred: any[];
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    middlewares(t: any, e?: number): {
                        _middlewares: any;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    fetch(t?: any, e?: string, r?: null): any;
                    get(t?: string): any;
                    delete(t?: string): any;
                    put(t: any, e?: string): any;
                    post(t: any, e?: string): any;
                    patch(t: any, e?: string): any;
                    head(t?: string): any;
                    opts(t?: string): any;
                    body(t: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                    json(t: any, e: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                };
                resolve(t: any, e?: number): {
                    _resolvers: any[];
                    _url: string;
                    _options: {};
                    _config: {
                        options: {};
                        errorType: string;
                        polyfills: {};
                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                    };
                    _catchers: Map<any, any>;
                    _deferred: never[];
                    _middlewares: never[];
                    _addons: never[];
                    addon(t: any): any;
                    errorType(t: any): any;
                    polyfills(t: any, e?: number): any;
                    url(t: any, e?: number): any;
                    options(t: any, e?: number): any;
                    headers(t: any): any;
                    accept(t: any): any;
                    content(e: any): any;
                    auth(t: any): any;
                    catcher(t: any, e: any): any;
                    catcherFallback(t: any): any;
                    resolve(t: any, e?: number): any;
                    defer(t: any, e?: number): {
                        _deferred: any[];
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    middlewares(t: any, e?: number): {
                        _middlewares: any;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    fetch(t?: any, e?: string, r?: null): any;
                    get(t?: string): any;
                    delete(t?: string): any;
                    put(t: any, e?: string): any;
                    post(t: any, e?: string): any;
                    patch(t: any, e?: string): any;
                    head(t?: string): any;
                    opts(t?: string): any;
                    body(t: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                    json(t: any, e: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                };
                defer(t: any, e?: number): {
                    _deferred: any[];
                    _url: string;
                    _options: {};
                    _config: {
                        options: {};
                        errorType: string;
                        polyfills: {};
                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                    };
                    _catchers: Map<any, any>;
                    _resolvers: never[];
                    _middlewares: never[];
                    _addons: never[];
                    addon(t: any): any;
                    errorType(t: any): any;
                    polyfills(t: any, e?: number): any;
                    url(t: any, e?: number): any;
                    options(t: any, e?: number): any;
                    headers(t: any): any;
                    accept(t: any): any;
                    content(e: any): any;
                    auth(t: any): any;
                    catcher(t: any, e: any): any;
                    catcherFallback(t: any): any;
                    resolve(t: any, e?: number): any;
                    defer(t: any, e?: number): any;
                    middlewares(t: any, e?: number): {
                        _middlewares: any;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    fetch(t?: any, e?: string, r?: null): any;
                    get(t?: string): any;
                    delete(t?: string): any;
                    put(t: any, e?: string): any;
                    post(t: any, e?: string): any;
                    patch(t: any, e?: string): any;
                    head(t?: string): any;
                    opts(t?: string): any;
                    body(t: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                    json(t: any, e: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                };
                middlewares(t: any, e?: number): {
                    _middlewares: any;
                    _url: string;
                    _options: {};
                    _config: {
                        options: {};
                        errorType: string;
                        polyfills: {};
                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                    };
                    _catchers: Map<any, any>;
                    _resolvers: never[];
                    _deferred: never[];
                    _addons: never[];
                    addon(t: any): any;
                    errorType(t: any): any;
                    polyfills(t: any, e?: number): any;
                    url(t: any, e?: number): any;
                    options(t: any, e?: number): any;
                    headers(t: any): any;
                    accept(t: any): any;
                    content(e: any): any;
                    auth(t: any): any;
                    catcher(t: any, e: any): any;
                    catcherFallback(t: any): any;
                    resolve(t: any, e?: number): any;
                    defer(t: any, e?: number): any;
                    middlewares(t: any, e?: number): any;
                    fetch(t?: any, e?: string, r?: null): any;
                    get(t?: string): any;
                    delete(t?: string): any;
                    put(t: any, e?: string): any;
                    post(t: any, e?: string): any;
                    patch(t: any, e?: string): any;
                    head(t?: string): any;
                    opts(t?: string): any;
                    body(t: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                    json(t: any, e: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                };
                fetch(t?: any, e?: string, r?: null): any;
                get(t?: string): any;
                delete(t?: string): any;
                put(t: any, e?: string): any;
                post(t: any, e?: string): any;
                patch(t: any, e?: string): any;
                head(t?: string): any;
                opts(t?: string): any;
                body(t: any): {
                    _options: {
                        body: any;
                    };
                    _url: string;
                    _config: {
                        options: {};
                        errorType: string;
                        polyfills: {};
                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                    };
                    _catchers: Map<any, any>;
                    _resolvers: never[];
                    _deferred: never[];
                    _middlewares: never[];
                    _addons: never[];
                    addon(t: any): any;
                    errorType(t: any): any;
                    polyfills(t: any, e?: number): any;
                    url(t: any, e?: number): any;
                    options(t: any, e?: number): any;
                    headers(t: any): any;
                    accept(t: any): any;
                    content(e: any): any;
                    auth(t: any): any;
                    catcher(t: any, e: any): any;
                    catcherFallback(t: any): any;
                    resolve(t: any, e?: number): any;
                    defer(t: any, e?: number): any;
                    middlewares(t: any, e?: number): any;
                    fetch(t?: any, e?: string, r?: null): any;
                    get(t?: string): any;
                    delete(t?: string): any;
                    put(t: any, e?: string): any;
                    post(t: any, e?: string): any;
                    patch(t: any, e?: string): any;
                    head(t?: string): any;
                    opts(t?: string): any;
                    body(t: any): any;
                    json(t: any, e: any): any;
                };
                json(t: any, e: any): {
                    _options: {
                        body: any;
                    };
                    _url: string;
                    _config: {
                        options: {};
                        errorType: string;
                        polyfills: {};
                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                    };
                    _catchers: Map<any, any>;
                    _resolvers: never[];
                    _deferred: never[];
                    _middlewares: never[];
                    _addons: never[];
                    addon(t: any): any;
                    errorType(t: any): any;
                    polyfills(t: any, e?: number): any;
                    url(t: any, e?: number): any;
                    options(t: any, e?: number): any;
                    headers(t: any): any;
                    accept(t: any): any;
                    content(e: any): any;
                    auth(t: any): any;
                    catcher(t: any, e: any): any;
                    catcherFallback(t: any): any;
                    resolve(t: any, e?: number): any;
                    defer(t: any, e?: number): any;
                    middlewares(t: any, e?: number): any;
                    fetch(t?: any, e?: string, r?: null): any;
                    get(t?: string): any;
                    delete(t?: string): any;
                    put(t: any, e?: string): any;
                    post(t: any, e?: string): any;
                    patch(t: any, e?: string): any;
                    head(t?: string): any;
                    opts(t?: string): any;
                    body(t: any): any;
                    json(t: any, e: any): any;
                };
            };
            headers(t: any): {
                _options: any;
                _url: string;
                _config: {
                    options: {};
                    errorType: string;
                    polyfills: {};
                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                };
                _catchers: Map<any, any>;
                _resolvers: never[];
                _deferred: never[];
                _middlewares: never[];
                _addons: never[];
                addon(t: any): any;
                errorType(t: any): any;
                polyfills(t: any, e?: number): any;
                url(t: any, e?: number): any;
                options(t: any, e?: number): any;
                headers(t: any): any;
                accept(t: any): any;
                content(e: any): any;
                auth(t: any): any;
                catcher(t: any, e: any): {
                    _catchers: Map<any, any>;
                    _url: string;
                    _options: {};
                    _config: {
                        options: {};
                        errorType: string;
                        polyfills: {};
                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                    };
                    _resolvers: never[];
                    _deferred: never[];
                    _middlewares: never[];
                    _addons: never[];
                    addon(t: any): any;
                    errorType(t: any): any;
                    polyfills(t: any, e?: number): any;
                    url(t: any, e?: number): any;
                    options(t: any, e?: number): any;
                    headers(t: any): any;
                    accept(t: any): any;
                    content(e: any): any;
                    auth(t: any): any;
                    catcher(t: any, e: any): any;
                    catcherFallback(t: any): any;
                    resolve(t: any, e?: number): {
                        _resolvers: any[];
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): {
                            _deferred: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    defer(t: any, e?: number): {
                        _deferred: any[];
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    middlewares(t: any, e?: number): {
                        _middlewares: any;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    fetch(t?: any, e?: string, r?: null): any;
                    get(t?: string): any;
                    delete(t?: string): any;
                    put(t: any, e?: string): any;
                    post(t: any, e?: string): any;
                    patch(t: any, e?: string): any;
                    head(t?: string): any;
                    opts(t?: string): any;
                    body(t: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                    json(t: any, e: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                };
                catcherFallback(t: any): {
                    _catchers: Map<any, any>;
                    _url: string;
                    _options: {};
                    _config: {
                        options: {};
                        errorType: string;
                        polyfills: {};
                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                    };
                    _resolvers: never[];
                    _deferred: never[];
                    _middlewares: never[];
                    _addons: never[];
                    addon(t: any): any;
                    errorType(t: any): any;
                    polyfills(t: any, e?: number): any;
                    url(t: any, e?: number): any;
                    options(t: any, e?: number): any;
                    headers(t: any): any;
                    accept(t: any): any;
                    content(e: any): any;
                    auth(t: any): any;
                    catcher(t: any, e: any): any;
                    catcherFallback(t: any): any;
                    resolve(t: any, e?: number): {
                        _resolvers: any[];
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): {
                            _deferred: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    defer(t: any, e?: number): {
                        _deferred: any[];
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    middlewares(t: any, e?: number): {
                        _middlewares: any;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    fetch(t?: any, e?: string, r?: null): any;
                    get(t?: string): any;
                    delete(t?: string): any;
                    put(t: any, e?: string): any;
                    post(t: any, e?: string): any;
                    patch(t: any, e?: string): any;
                    head(t?: string): any;
                    opts(t?: string): any;
                    body(t: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                    json(t: any, e: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                };
                resolve(t: any, e?: number): {
                    _resolvers: any[];
                    _url: string;
                    _options: {};
                    _config: {
                        options: {};
                        errorType: string;
                        polyfills: {};
                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                    };
                    _catchers: Map<any, any>;
                    _deferred: never[];
                    _middlewares: never[];
                    _addons: never[];
                    addon(t: any): any;
                    errorType(t: any): any;
                    polyfills(t: any, e?: number): any;
                    url(t: any, e?: number): any;
                    options(t: any, e?: number): any;
                    headers(t: any): any;
                    accept(t: any): any;
                    content(e: any): any;
                    auth(t: any): any;
                    catcher(t: any, e: any): any;
                    catcherFallback(t: any): any;
                    resolve(t: any, e?: number): any;
                    defer(t: any, e?: number): {
                        _deferred: any[];
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    middlewares(t: any, e?: number): {
                        _middlewares: any;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    fetch(t?: any, e?: string, r?: null): any;
                    get(t?: string): any;
                    delete(t?: string): any;
                    put(t: any, e?: string): any;
                    post(t: any, e?: string): any;
                    patch(t: any, e?: string): any;
                    head(t?: string): any;
                    opts(t?: string): any;
                    body(t: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                    json(t: any, e: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                };
                defer(t: any, e?: number): {
                    _deferred: any[];
                    _url: string;
                    _options: {};
                    _config: {
                        options: {};
                        errorType: string;
                        polyfills: {};
                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                    };
                    _catchers: Map<any, any>;
                    _resolvers: never[];
                    _middlewares: never[];
                    _addons: never[];
                    addon(t: any): any;
                    errorType(t: any): any;
                    polyfills(t: any, e?: number): any;
                    url(t: any, e?: number): any;
                    options(t: any, e?: number): any;
                    headers(t: any): any;
                    accept(t: any): any;
                    content(e: any): any;
                    auth(t: any): any;
                    catcher(t: any, e: any): any;
                    catcherFallback(t: any): any;
                    resolve(t: any, e?: number): any;
                    defer(t: any, e?: number): any;
                    middlewares(t: any, e?: number): {
                        _middlewares: any;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    fetch(t?: any, e?: string, r?: null): any;
                    get(t?: string): any;
                    delete(t?: string): any;
                    put(t: any, e?: string): any;
                    post(t: any, e?: string): any;
                    patch(t: any, e?: string): any;
                    head(t?: string): any;
                    opts(t?: string): any;
                    body(t: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                    json(t: any, e: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                };
                middlewares(t: any, e?: number): {
                    _middlewares: any;
                    _url: string;
                    _options: {};
                    _config: {
                        options: {};
                        errorType: string;
                        polyfills: {};
                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                    };
                    _catchers: Map<any, any>;
                    _resolvers: never[];
                    _deferred: never[];
                    _addons: never[];
                    addon(t: any): any;
                    errorType(t: any): any;
                    polyfills(t: any, e?: number): any;
                    url(t: any, e?: number): any;
                    options(t: any, e?: number): any;
                    headers(t: any): any;
                    accept(t: any): any;
                    content(e: any): any;
                    auth(t: any): any;
                    catcher(t: any, e: any): any;
                    catcherFallback(t: any): any;
                    resolve(t: any, e?: number): any;
                    defer(t: any, e?: number): any;
                    middlewares(t: any, e?: number): any;
                    fetch(t?: any, e?: string, r?: null): any;
                    get(t?: string): any;
                    delete(t?: string): any;
                    put(t: any, e?: string): any;
                    post(t: any, e?: string): any;
                    patch(t: any, e?: string): any;
                    head(t?: string): any;
                    opts(t?: string): any;
                    body(t: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                    json(t: any, e: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                };
                fetch(t?: any, e?: string, r?: null): any;
                get(t?: string): any;
                delete(t?: string): any;
                put(t: any, e?: string): any;
                post(t: any, e?: string): any;
                patch(t: any, e?: string): any;
                head(t?: string): any;
                opts(t?: string): any;
                body(t: any): {
                    _options: {
                        body: any;
                    };
                    _url: string;
                    _config: {
                        options: {};
                        errorType: string;
                        polyfills: {};
                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                    };
                    _catchers: Map<any, any>;
                    _resolvers: never[];
                    _deferred: never[];
                    _middlewares: never[];
                    _addons: never[];
                    addon(t: any): any;
                    errorType(t: any): any;
                    polyfills(t: any, e?: number): any;
                    url(t: any, e?: number): any;
                    options(t: any, e?: number): any;
                    headers(t: any): any;
                    accept(t: any): any;
                    content(e: any): any;
                    auth(t: any): any;
                    catcher(t: any, e: any): any;
                    catcherFallback(t: any): any;
                    resolve(t: any, e?: number): any;
                    defer(t: any, e?: number): any;
                    middlewares(t: any, e?: number): any;
                    fetch(t?: any, e?: string, r?: null): any;
                    get(t?: string): any;
                    delete(t?: string): any;
                    put(t: any, e?: string): any;
                    post(t: any, e?: string): any;
                    patch(t: any, e?: string): any;
                    head(t?: string): any;
                    opts(t?: string): any;
                    body(t: any): any;
                    json(t: any, e: any): any;
                };
                json(t: any, e: any): {
                    _options: {
                        body: any;
                    };
                    _url: string;
                    _config: {
                        options: {};
                        errorType: string;
                        polyfills: {};
                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                    };
                    _catchers: Map<any, any>;
                    _resolvers: never[];
                    _deferred: never[];
                    _middlewares: never[];
                    _addons: never[];
                    addon(t: any): any;
                    errorType(t: any): any;
                    polyfills(t: any, e?: number): any;
                    url(t: any, e?: number): any;
                    options(t: any, e?: number): any;
                    headers(t: any): any;
                    accept(t: any): any;
                    content(e: any): any;
                    auth(t: any): any;
                    catcher(t: any, e: any): any;
                    catcherFallback(t: any): any;
                    resolve(t: any, e?: number): any;
                    defer(t: any, e?: number): any;
                    middlewares(t: any, e?: number): any;
                    fetch(t?: any, e?: string, r?: null): any;
                    get(t?: string): any;
                    delete(t?: string): any;
                    put(t: any, e?: string): any;
                    post(t: any, e?: string): any;
                    patch(t: any, e?: string): any;
                    head(t?: string): any;
                    opts(t?: string): any;
                    body(t: any): any;
                    json(t: any, e: any): any;
                };
            };
            accept(t: any): {
                _options: any;
                _url: string;
                _config: {
                    options: {};
                    errorType: string;
                    polyfills: {};
                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                };
                _catchers: Map<any, any>;
                _resolvers: never[];
                _deferred: never[];
                _middlewares: never[];
                _addons: never[];
                addon(t: any): any;
                errorType(t: any): any;
                polyfills(t: any, e?: number): any;
                url(t: any, e?: number): any;
                options(t: any, e?: number): any;
                headers(t: any): any;
                accept(t: any): any;
                content(e: any): any;
                auth(t: any): any;
                catcher(t: any, e: any): {
                    _catchers: Map<any, any>;
                    _url: string;
                    _options: {};
                    _config: {
                        options: {};
                        errorType: string;
                        polyfills: {};
                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                    };
                    _resolvers: never[];
                    _deferred: never[];
                    _middlewares: never[];
                    _addons: never[];
                    addon(t: any): any;
                    errorType(t: any): any;
                    polyfills(t: any, e?: number): any;
                    url(t: any, e?: number): any;
                    options(t: any, e?: number): any;
                    headers(t: any): any;
                    accept(t: any): any;
                    content(e: any): any;
                    auth(t: any): any;
                    catcher(t: any, e: any): any;
                    catcherFallback(t: any): any;
                    resolve(t: any, e?: number): {
                        _resolvers: any[];
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): {
                            _deferred: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    defer(t: any, e?: number): {
                        _deferred: any[];
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    middlewares(t: any, e?: number): {
                        _middlewares: any;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    fetch(t?: any, e?: string, r?: null): any;
                    get(t?: string): any;
                    delete(t?: string): any;
                    put(t: any, e?: string): any;
                    post(t: any, e?: string): any;
                    patch(t: any, e?: string): any;
                    head(t?: string): any;
                    opts(t?: string): any;
                    body(t: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                    json(t: any, e: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                };
                catcherFallback(t: any): {
                    _catchers: Map<any, any>;
                    _url: string;
                    _options: {};
                    _config: {
                        options: {};
                        errorType: string;
                        polyfills: {};
                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                    };
                    _resolvers: never[];
                    _deferred: never[];
                    _middlewares: never[];
                    _addons: never[];
                    addon(t: any): any;
                    errorType(t: any): any;
                    polyfills(t: any, e?: number): any;
                    url(t: any, e?: number): any;
                    options(t: any, e?: number): any;
                    headers(t: any): any;
                    accept(t: any): any;
                    content(e: any): any;
                    auth(t: any): any;
                    catcher(t: any, e: any): any;
                    catcherFallback(t: any): any;
                    resolve(t: any, e?: number): {
                        _resolvers: any[];
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): {
                            _deferred: any[];
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): {
                                _middlewares: any;
                                _url: string;
                                _options: {};
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                                json(t: any, e: any): {
                                    _options: {
                                        body: any;
                                    };
                                    _url: string;
                                    _config: {
                                        options: {};
                                        errorType: string;
                                        polyfills: {};
                                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                    };
                                    _catchers: Map<any, any>;
                                    _resolvers: never[];
                                    _deferred: never[];
                                    _middlewares: never[];
                                    _addons: never[];
                                    addon(t: any): any;
                                    errorType(t: any): any;
                                    polyfills(t: any, e?: number): any;
                                    url(t: any, e?: number): any;
                                    options(t: any, e?: number): any;
                                    headers(t: any): any;
                                    accept(t: any): any;
                                    content(e: any): any;
                                    auth(t: any): any;
                                    catcher(t: any, e: any): any;
                                    catcherFallback(t: any): any;
                                    resolve(t: any, e?: number): any;
                                    defer(t: any, e?: number): any;
                                    middlewares(t: any, e?: number): any;
                                    fetch(t?: any, e?: string, r?: null): any;
                                    get(t?: string): any;
                                    delete(t?: string): any;
                                    put(t: any, e?: string): any;
                                    post(t: any, e?: string): any;
                                    patch(t: any, e?: string): any;
                                    head(t?: string): any;
                                    opts(t?: string): any;
                                    body(t: any): any;
                                    json(t: any, e: any): any;
                                };
                            };
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    defer(t: any, e?: number): {
                        _deferred: any[];
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    middlewares(t: any, e?: number): {
                        _middlewares: any;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    fetch(t?: any, e?: string, r?: null): any;
                    get(t?: string): any;
                    delete(t?: string): any;
                    put(t: any, e?: string): any;
                    post(t: any, e?: string): any;
                    patch(t: any, e?: string): any;
                    head(t?: string): any;
                    opts(t?: string): any;
                    body(t: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                    json(t: any, e: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                };
                resolve(t: any, e?: number): {
                    _resolvers: any[];
                    _url: string;
                    _options: {};
                    _config: {
                        options: {};
                        errorType: string;
                        polyfills: {};
                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                    };
                    _catchers: Map<any, any>;
                    _deferred: never[];
                    _middlewares: never[];
                    _addons: never[];
                    addon(t: any): any;
                    errorType(t: any): any;
                    polyfills(t: any, e?: number): any;
                    url(t: any, e?: number): any;
                    options(t: any, e?: number): any;
                    headers(t: any): any;
                    accept(t: any): any;
                    content(e: any): any;
                    auth(t: any): any;
                    catcher(t: any, e: any): any;
                    catcherFallback(t: any): any;
                    resolve(t: any, e?: number): any;
                    defer(t: any, e?: number): {
                        _deferred: any[];
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): {
                            _middlewares: any;
                            _url: string;
                            _options: {};
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                            json(t: any, e: any): {
                                _options: {
                                    body: any;
                                };
                                _url: string;
                                _config: {
                                    options: {};
                                    errorType: string;
                                    polyfills: {};
                                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                                };
                                _catchers: Map<any, any>;
                                _resolvers: never[];
                                _deferred: never[];
                                _middlewares: never[];
                                _addons: never[];
                                addon(t: any): any;
                                errorType(t: any): any;
                                polyfills(t: any, e?: number): any;
                                url(t: any, e?: number): any;
                                options(t: any, e?: number): any;
                                headers(t: any): any;
                                accept(t: any): any;
                                content(e: any): any;
                                auth(t: any): any;
                                catcher(t: any, e: any): any;
                                catcherFallback(t: any): any;
                                resolve(t: any, e?: number): any;
                                defer(t: any, e?: number): any;
                                middlewares(t: any, e?: number): any;
                                fetch(t?: any, e?: string, r?: null): any;
                                get(t?: string): any;
                                delete(t?: string): any;
                                put(t: any, e?: string): any;
                                post(t: any, e?: string): any;
                                patch(t: any, e?: string): any;
                                head(t?: string): any;
                                opts(t?: string): any;
                                body(t: any): any;
                                json(t: any, e: any): any;
                            };
                        };
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    middlewares(t: any, e?: number): {
                        _middlewares: any;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    fetch(t?: any, e?: string, r?: null): any;
                    get(t?: string): any;
                    delete(t?: string): any;
                    put(t: any, e?: string): any;
                    post(t: any, e?: string): any;
                    patch(t: any, e?: string): any;
                    head(t?: string): any;
                    opts(t?: string): any;
                    body(t: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                    json(t: any, e: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                };
                defer(t: any, e?: number): {
                    _deferred: any[];
                    _url: string;
                    _options: {};
                    _config: {
                        options: {};
                        errorType: string;
                        polyfills: {};
                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                    };
                    _catchers: Map<any, any>;
                    _resolvers: never[];
                    _middlewares: never[];
                    _addons: never[];
                    addon(t: any): any;
                    errorType(t: any): any;
                    polyfills(t: any, e?: number): any;
                    url(t: any, e?: number): any;
                    options(t: any, e?: number): any;
                    headers(t: any): any;
                    accept(t: any): any;
                    content(e: any): any;
                    auth(t: any): any;
                    catcher(t: any, e: any): any;
                    catcherFallback(t: any): any;
                    resolve(t: any, e?: number): any;
                    defer(t: any, e?: number): any;
                    middlewares(t: any, e?: number): {
                        _middlewares: any;
                        _url: string;
                        _options: {};
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                        json(t: any, e: any): {
                            _options: {
                                body: any;
                            };
                            _url: string;
                            _config: {
                                options: {};
                                errorType: string;
                                polyfills: {};
                                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                            };
                            _catchers: Map<any, any>;
                            _resolvers: never[];
                            _deferred: never[];
                            _middlewares: never[];
                            _addons: never[];
                            addon(t: any): any;
                            errorType(t: any): any;
                            polyfills(t: any, e?: number): any;
                            url(t: any, e?: number): any;
                            options(t: any, e?: number): any;
                            headers(t: any): any;
                            accept(t: any): any;
                            content(e: any): any;
                            auth(t: any): any;
                            catcher(t: any, e: any): any;
                            catcherFallback(t: any): any;
                            resolve(t: any, e?: number): any;
                            defer(t: any, e?: number): any;
                            middlewares(t: any, e?: number): any;
                            fetch(t?: any, e?: string, r?: null): any;
                            get(t?: string): any;
                            delete(t?: string): any;
                            put(t: any, e?: string): any;
                            post(t: any, e?: string): any;
                            patch(t: any, e?: string): any;
                            head(t?: string): any;
                            opts(t?: string): any;
                            body(t: any): any;
                            json(t: any, e: any): any;
                        };
                    };
                    fetch(t?: any, e?: string, r?: null): any;
                    get(t?: string): any;
                    delete(t?: string): any;
                    put(t: any, e?: string): any;
                    post(t: any, e?: string): any;
                    patch(t: any, e?: string): any;
                    head(t?: string): any;
                    opts(t?: string): any;
                    body(t: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                    json(t: any, e: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                };
                middlewares(t: any, e?: number): {
                    _middlewares: any;
                    _url: string;
                    _options: {};
                    _config: {
                        options: {};
                        errorType: string;
                        polyfills: {};
                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                    };
                    _catchers: Map<any, any>;
                    _resolvers: never[];
                    _deferred: never[];
                    _addons: never[];
                    addon(t: any): any;
                    errorType(t: any): any;
                    polyfills(t: any, e?: number): any;
                    url(t: any, e?: number): any;
                    options(t: any, e?: number): any;
                    headers(t: any): any;
                    accept(t: any): any;
                    content(e: any): any;
                    auth(t: any): any;
                    catcher(t: any, e: any): any;
                    catcherFallback(t: any): any;
                    resolve(t: any, e?: number): any;
                    defer(t: any, e?: number): any;
                    middlewares(t: any, e?: number): any;
                    fetch(t?: any, e?: string, r?: null): any;
                    get(t?: string): any;
                    delete(t?: string): any;
                    put(t: any, e?: string): any;
                    post(t: any, e?: string): any;
                    patch(t: any, e?: string): any;
                    head(t?: string): any;
                    opts(t?: string): any;
                    body(t: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                    json(t: any, e: any): {
                        _options: {
                            body: any;
                        };
                        _url: string;
                        _config: {
                            options: {};
                            errorType: string;
                            polyfills: {};
                            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                        };
                        _catchers: Map<any, any>;
                        _resolvers: never[];
                        _deferred: never[];
                        _middlewares: never[];
                        _addons: never[];
                        addon(t: any): any;
                        errorType(t: any): any;
                        polyfills(t: any, e?: number): any;
                        url(t: any, e?: number): any;
                        options(t: any, e?: number): any;
                        headers(t: any): any;
                        accept(t: any): any;
                        content(e: any): any;
                        auth(t: any): any;
                        catcher(t: any, e: any): any;
                        catcherFallback(t: any): any;
                        resolve(t: any, e?: number): any;
                        defer(t: any, e?: number): any;
                        middlewares(t: any, e?: number): any;
                        fetch(t?: any, e?: string, r?: null): any;
                        get(t?: string): any;
                        delete(t?: string): any;
                        put(t: any, e?: string): any;
                        post(t: any, e?: string): any;
                        patch(t: any, e?: string): any;
                        head(t?: string): any;
                        opts(t?: string): any;
                        body(t: any): any;
                        json(t: any, e: any): any;
                    };
                };
                fetch(t?: any, e?: string, r?: null): any;
                get(t?: string): any;
                delete(t?: string): any;
                put(t: any, e?: string): any;
                post(t: any, e?: string): any;
                patch(t: any, e?: string): any;
                head(t?: string): any;
                opts(t?: string): any;
                body(t: any): {
                    _options: {
                        body: any;
                    };
                    _url: string;
                    _config: {
                        options: {};
                        errorType: string;
                        polyfills: {};
                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                    };
                    _catchers: Map<any, any>;
                    _resolvers: never[];
                    _deferred: never[];
                    _middlewares: never[];
                    _addons: never[];
                    addon(t: any): any;
                    errorType(t: any): any;
                    polyfills(t: any, e?: number): any;
                    url(t: any, e?: number): any;
                    options(t: any, e?: number): any;
                    headers(t: any): any;
                    accept(t: any): any;
                    content(e: any): any;
                    auth(t: any): any;
                    catcher(t: any, e: any): any;
                    catcherFallback(t: any): any;
                    resolve(t: any, e?: number): any;
                    defer(t: any, e?: number): any;
                    middlewares(t: any, e?: number): any;
                    fetch(t?: any, e?: string, r?: null): any;
                    get(t?: string): any;
                    delete(t?: string): any;
                    put(t: any, e?: string): any;
                    post(t: any, e?: string): any;
                    patch(t: any, e?: string): any;
                    head(t?: string): any;
                    opts(t?: string): any;
                    body(t: any): any;
                    json(t: any, e: any): any;
                };
                json(t: any, e: any): {
                    _options: {
                        body: any;
                    };
                    _url: string;
                    _config: {
                        options: {};
                        errorType: string;
                        polyfills: {};
                        polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                    };
                    _catchers: Map<any, any>;
                    _resolvers: never[];
                    _deferred: never[];
                    _middlewares: never[];
                    _addons: never[];
                    addon(t: any): any;
                    errorType(t: any): any;
                    polyfills(t: any, e?: number): any;
                    url(t: any, e?: number): any;
                    options(t: any, e?: number): any;
                    headers(t: any): any;
                    accept(t: any): any;
                    content(e: any): any;
                    auth(t: any): any;
                    catcher(t: any, e: any): any;
                    catcherFallback(t: any): any;
                    resolve(t: any, e?: number): any;
                    defer(t: any, e?: number): any;
                    middlewares(t: any, e?: number): any;
                    fetch(t?: any, e?: string, r?: null): any;
                    get(t?: string): any;
                    delete(t?: string): any;
                    put(t: any, e?: string): any;
                    post(t: any, e?: string): any;
                    patch(t: any, e?: string): any;
                    head(t?: string): any;
                    opts(t?: string): any;
                    body(t: any): any;
                    json(t: any, e: any): any;
                };
            };
            ... 16 more ...;
            json(t: any, e: any): {
                _options: {
                    body: any;
                };
                _url: string;
                _config: {
                    options: {};
                    errorType: string;
                    polyfills: {};
                    polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
                };
                _catchers: Map<any, any>;
                _resolvers: never[];
                _deferred: never[];
                _middlewares: never[];
                _addons: never[];
                addon(t: any): any;
                errorType(t: any): any;
                polyfills(t: any, e?: number): any;
                url(t: any, e?: number): any;
                options(t: any, e?: number): any;
                headers(t: any): any;
                accept(t: any): any;
                content(e: any): any;
                auth(t: any): any;
                catcher(t: any, e: any): any;
                catcherFallback(t: any): any;
                resolve(t: any, e?: number): any;
                defer(t: any, e?: number): any;
                middlewares(t: any, e?: number): any;
                fetch(t?: any, e?: string, r?: null): any;
                get(t?: string): any;
                delete(t?: string): any;
                put(t: any, e?: string): any;
                post(t: any, e?: string): any;
                patch(t: any, e?: string): any;
                head(t?: string): any;
                opts(t?: string): any;
                body(t: any): any;
                json(t: any, e: any): any;
            };
        };
        ... 20 more ...;
        json(t: any, e: any): {
            _options: {
                body: any;
            };
            _url: string;
            _config: {
                options: {};
                errorType: string;
                polyfills: {};
                polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
            };
            _catchers: Map<any, any>;
            _resolvers: never[];
            _deferred: never[];
            _middlewares: never[];
            _addons: never[];
            addon(t: any): any;
            errorType(t: any): any;
            polyfills(t: any, e?: number): any;
            url(t: any, e?: number): any;
            options(t: any, e?: number): any;
            headers(t: any): any;
            accept(t: any): any;
            content(e: any): any;
            auth(t: any): any;
            catcher(t: any, e: any): any;
            catcherFallback(t: any): any;
            resolve(t: any, e?: number): any;
            defer(t: any, e?: number): any;
            middlewares(t: any, e?: number): any;
            fetch(t?: any, e?: string, r?: null): any;
            get(t?: string): any;
            delete(t?: string): any;
            put(t: any, e?: string): any;
            post(t: any, e?: string): any;
            patch(t: any, e?: string): any;
            head(t?: string): any;
            opts(t?: string): any;
            body(t: any): any;
            json(t: any, e: any): any;
        };
    };
    ... 21 more ...;
    json(t: any, e: any): {
        _options: {
            body: any;
        };
        _url: string;
        _config: {
            options: {};
            errorType: string;
            polyfills: {};
            polyfill(t: any, e?: number, r?: number, ...o: any[]): any;
        };
        _catchers: Map<any, any>;
        _resolvers: never[];
        _deferred: never[];
        _middlewares: never[];
        _addons: never[];
        addon(t: any): any;
        errorType(t: any): any;
        polyfills(t: any, e?: number): any;
        url(t: any, e?: number): any;
        options(t: any, e?: number): any;
        headers(t: any): any;
        accept(t: any): any;
        content(e: any): any;
        auth(t: any): any;
        catcher(t: any, e: any): any;
        catcherFallback(t: any): any;
        resolve(t: any, e?: number): any;
        defer(t: any, e?: number): any;
        middlewares(t: any, e?: number): any;
        fetch(t?: any, e?: string, r?: null): any;
        get(t?: string): any;
        delete(t?: string): any;
        put(t: any, e?: string): any;
        post(t: any, e?: string): any;
        patch(t: any, e?: string): any;
        head(t?: string): any;
        opts(t?: string): any;
        body(t: any): any;
        json(t: any, e: any): any;
    };
};
declare namespace c {
    export { c as default };
    export function options(t: any, e?: number): void;
    export function errorType(t: any): void;
    export function polyfills(t: any, e?: number): void;
    export { h as WretchError };
}
declare class h extends Error {
}
//# sourceMappingURL=wretch.min.d.mts.map