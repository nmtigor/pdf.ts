import type { FieldObject } from "./core/annotation.js";
import type { Destination, ExplicitDest, OpenAction, Order, SetOCGState } from "./core/catalog.js";
import type { AnnotActions } from "./core/core_utils.js";
import type { DocumentInfo, XFAData } from "./core/document.js";
import type { Attachment } from "./core/file_spec.js";
import type { OpListIR } from "./core/operator_list.js";
import type { Ref } from "./core/primitives.js";
import type { XFAElData, XFAElObj } from "./core/xfa/alias.js";
import type { AnnotationElement, FileAttachmentAnnotationElement } from "./display/annotation_layer.js";
import { AnnotationLayer } from "./display/annotation_layer.js";
import type { AnnotationStorage, PrintAnnotationStorage } from "./display/annotation_storage.js";
import type { AnnotIntent, DocumentInitP, Intent, OutlineNode, PDFDocumentLoadingTask, PDFDocumentProxy, PDFPageProxy, RefProxy, RenderP, RenderTask, TextContent, TextItem } from "./display/api.js";
import { build, getDocument, PDFDataRangeTransport, PDFWorker, version } from "./display/api.js";
import type { PageViewport, StatTimer } from "./display/display_utils.js";
import { DOMSVGFactory, fetchData, getFilenameFromUrl, getPdfFilenameFromUrl, getXfaPageViewport, isDataScheme, isPdfFile, PDFDateString, PixelsPerInch, RenderingCancelledException, setLayerDimensions } from "./display/display_utils.js";
import { DrawLayer } from "./display/draw_layer.js";
import { AnnotationEditorLayer } from "./display/editor/annotation_editor_layer.js";
import type { PropertyToUpdate } from "./display/editor/editor.js";
import { Outliner } from "./display/editor/outliner.js";
import type { DispatchUpdateStatesP } from "./display/editor/tools.js";
import { AnnotationEditorUIManager } from "./display/editor/tools.js";
import type { FontFaceObject } from "./display/font_loader.js";
import type { Metadata } from "./display/metadata.js";
import type { OptionalContentConfig } from "./display/optional_content_config.js";
import type { TextLayerRenderTask } from "./display/text_layer.js";
import { renderTextLayer, updateTextLayer } from "./display/text_layer.js";
import { GlobalWorkerOptions } from "./display/worker_options.js";
import { XfaLayer } from "./display/xfa_layer.js";
import type { AppInfo } from "./scripting_api/app.js";
import type { ScriptingActionName } from "./scripting_api/common.js";
import type { DocInfo } from "./scripting_api/doc.js";
import type { matrix_t, OPSName } from "./shared/util.js";
import { AbortException, AnnotationEditorParamsType, AnnotationEditorType, AnnotationMode, CMapCompressionType, createValidAbsoluteUrl, FeatureTest, ImageKind, InvalidPDFException, MissingPDFException, normalizeUnicode, OPS, PasswordResponses, PermissionFlag, shadow, UnexpectedResponseException, Util, VerbosityLevel } from "./shared/util.js";
export { AbortException, type AnnotActions, AnnotationEditorLayer, AnnotationEditorParamsType, AnnotationEditorType, AnnotationEditorUIManager, type AnnotationElement, AnnotationLayer, AnnotationMode, type AnnotationStorage, type AnnotIntent, type AppInfo, type Attachment, build, CMapCompressionType, createValidAbsoluteUrl, type Destination, type DispatchUpdateStatesP, type DocInfo, type DocumentInfo, type DocumentInitP, DOMSVGFactory, DrawLayer, type ExplicitDest, FeatureTest, fetchData, type FieldObject, type FileAttachmentAnnotationElement, type FontFaceObject, getDocument, getFilenameFromUrl, getPdfFilenameFromUrl, getXfaPageViewport, GlobalWorkerOptions, ImageKind, type Intent, InvalidPDFException, isDataScheme, isPdfFile, type matrix_t, type Metadata, MissingPDFException, normalizeUnicode, type OpenAction, type OpListIR, OPS, type OPSName, type OptionalContentConfig, type Order, type OutlineNode, Outliner, type PageViewport, PasswordResponses, PDFDataRangeTransport, PDFDateString, type PDFDocumentLoadingTask, type PDFDocumentProxy, type PDFPageProxy, PDFWorker, PermissionFlag, PixelsPerInch, type PrintAnnotationStorage, type PropertyToUpdate, type Ref, type RefProxy, RenderingCancelledException, type RenderP, type RenderTask, renderTextLayer, type ScriptingActionName, setLayerDimensions, type SetOCGState, shadow, type StatTimer, type TextContent, type TextItem, type TextLayerRenderTask, UnexpectedResponseException, updateTextLayer, Util, VerbosityLevel, version, type XFAData, type XFAElData, type XFAElObj, XfaLayer, };
//# sourceMappingURL=pdf.d.ts.map