{"version":3,"file":"resolver.js","sourceRoot":"","sources":["../src/resolver.ts"],"names":[],"mappings":"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","sourcesContent":["import { middlewareHelper } from \"./middleware.js\"\nimport { mix } from \"./utils.js\"\nimport type { Wretch, WretchResponse, WretchResponseChain, WretchError as WretchErrorType } from \"./types.js\"\nimport { FETCH_ERROR, CATCHER_FALLBACK } from \"./constants.js\"\n\n/**\n * This class inheriting from Error is thrown when the fetch response is not \"ok\".\n * It extends Error and adds status, text and body fields.\n */\nexport class WretchError extends Error implements WretchErrorType {\n  status: number\n  response: WretchResponse\n  url: string\n  text?: string\n  json?: any\n}\n\nexport const resolver = <T, Chain, R>(wretch: T & Wretch<T, Chain, R>) => {\n  const sharedState = Object.create(null)\n\n  wretch = wretch._addons.reduce((w, addon) =>\n    addon.beforeRequest &&\n    addon.beforeRequest(w, wretch._options, sharedState)\n    || w,\n    wretch)\n\n  const {\n    _url: url,\n    _options: opts,\n    _config: config,\n    _catchers: _catchers,\n    _resolvers: resolvers,\n    _middlewares: middlewares,\n    _addons: addons\n  } = wretch\n\n  const catchers = new Map(_catchers)\n  const finalOptions = mix(config.options, opts)\n\n  // The generated fetch request\n  let finalUrl = url\n  const _fetchReq = middlewareHelper(middlewares)((url, options) => {\n    finalUrl = url\n    return config.polyfill(\"fetch\")(url, options)\n  })(url, finalOptions)\n  // Throws on an http error\n  const referenceError = new Error()\n  const throwingPromise: Promise<void | WretchResponse> = _fetchReq\n    .catch(error => {\n      throw { [FETCH_ERROR]: error }\n    })\n    .then(response => {\n      if (!response.ok) {\n        const err = new WretchError()\n        // Enhance the error object\n        err[\"cause\"] = referenceError\n        err.stack = err.stack + \"\\nCAUSE: \" + referenceError.stack\n        err.response = response\n        err.url = finalUrl\n        if (response.type === \"opaque\") {\n          throw err\n        }\n        return response.text().then((body: string) => {\n          err.message = body\n          if (config.errorType === \"json\" || response.headers.get(\"Content-Type\")?.split(\";\")[0] === \"application/json\") {\n            try { err.json = JSON.parse(body) } catch (e) { /* ignore */ }\n          }\n          err.text = body\n          err[\"status\"] = response.status\n          throw err\n        })\n      }\n      return response\n    })\n  // Wraps the Promise in order to dispatch the error to a matching catcher\n  const catchersWrapper = <T>(promise: Promise<T>): Promise<void | T> => {\n    return promise.catch(err => {\n      const fetchErrorFlag = err.hasOwnProperty(FETCH_ERROR)\n      const error = fetchErrorFlag ? err[FETCH_ERROR] : err\n\n      const catcher =\n        (error?.status && catchers.get(error.status)) ||\n        catchers.get(error?.name) || (\n          fetchErrorFlag && catchers.has(FETCH_ERROR) && catchers.get(FETCH_ERROR)\n        )\n\n      if (catcher)\n        return catcher(error, wretch)\n\n      const catcherFallback = catchers.get(CATCHER_FALLBACK)\n      if (catcherFallback)\n        return catcherFallback(error, wretch)\n\n      throw error\n    })\n  }\n  // Enforces the proper promise type when a body parsing method is called.\n  type BodyParser = <Type>(funName: string | null) => <Result = void>(cb?: (type: Type) => Result) => Promise<Awaited<Result>>\n  const bodyParser: BodyParser = funName => cb => funName ?\n    // If a callback is provided, then callback with the body result otherwise return the parsed body itself.\n    catchersWrapper(throwingPromise.then(_ => _ && _[funName]()).then(_ => cb ? cb(_) : _)) :\n    // No body parsing method - return the response\n    catchersWrapper(throwingPromise.then(_ => cb ? cb(_ as any) : _))\n\n  const responseChain: WretchResponseChain<T, Chain, R> = {\n    _wretchReq: wretch,\n    _fetchReq,\n    _sharedState: sharedState,\n    res: bodyParser<WretchResponse>(null),\n    json: bodyParser<any>(\"json\"),\n    blob: bodyParser<Blob>(\"blob\"),\n    formData: bodyParser<FormData>(\"formData\"),\n    arrayBuffer: bodyParser<ArrayBuffer>(\"arrayBuffer\"),\n    text: bodyParser<string>(\"text\"),\n    error(errorId, cb) {\n      catchers.set(errorId, cb)\n      return this\n    },\n    badRequest(cb) { return this.error(400, cb) },\n    unauthorized(cb) { return this.error(401, cb) },\n    forbidden(cb) { return this.error(403, cb) },\n    notFound(cb) { return this.error(404, cb) },\n    timeout(cb) { return this.error(408, cb) },\n    internalError(cb) { return this.error(500, cb) },\n    fetchError(cb) { return this.error(FETCH_ERROR, cb) },\n  }\n\n  const enhancedResponseChain: R extends undefined ? Chain & WretchResponseChain<T, Chain, undefined> : R = addons.reduce((chain, addon) => ({\n    ...chain,\n    ...(addon.resolver as any)\n  }), responseChain)\n\n  return resolvers.reduce((chain, r) => r(chain, wretch), enhancedResponseChain)\n}\n"]}