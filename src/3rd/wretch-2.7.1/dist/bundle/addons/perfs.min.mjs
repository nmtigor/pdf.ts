const e=()=>{const e=new Map;let r=null;const s=(s,t,c,n)=>{if(!s.getEntriesByName)return 0;const i=s.getEntriesByName(t);return i&&i.length>0?(c(i.reverse()[0]),n.clearMeasures&&n.clearMeasures(t),e.delete(t),e.size<1&&(r.disconnect(),n.clearResourceTimings&&n.clearResourceTimings()),1):0};return{resolver:{perfs(t){return this._fetchReq.then((c=>((t,c,n)=>{if(!t||!c)return;const i=n.polyfill("performance",0);((t,c)=>(!r&&t&&c&&(r=new c((r=>{e.forEach(((e,c)=>{s(r,c,e,t)}))})),t.clearResourceTimings&&t.clearResourceTimings()),r))(i,n.polyfill("PerformanceObserver",0))&&(s(i,t,c,i)||(e.size<1&&r.observe({entryTypes:["resource","measure"]}),e.set(t,c)))})(this._wretchReq._url,t,this._wretchReq._config))).catch((()=>{})),this}}}};export{e as default};
//# sourceMappingURL=perfs.min.mjs.map
