"use strict";const e=(e,r)=>e*r,r=e=>e&&e.ok;exports.retry=({delayTimer:t=500,delayRamp:o=e,maxAttempts:n=10,until:s=r,onRetry:i=null,retryOnNetworkError:l=0,resolveWithLatestResponse:u=0,skip:c}={})=>e=>(r,m)=>{let p=0;if(c&&c(r,m))return e(r,m);const a=(c,h)=>Promise.resolve(s(c,h)).then((s=>s?c&&u?c:h?Promise.reject(h):c:(p++,!n||p<=n?new Promise((n=>{const s=o(t,p);setTimeout((()=>{"function"==typeof i?Promise.resolve(i({response:c,error:h,url:r,options:m})).then(((t={})=>{var o,s;n(e(null!==(o=t&&t.url)&&void 0!==o?o:r,null!==(s=t&&t.options)&&void 0!==s?s:m))})):n(e(r,m))}),s)})).then(a).catch((e=>{if(!l)throw e;return a(null,e)})):c&&u?c:Promise.reject(h||new Error("Number of attempts exceeded.")))));return e(r,m).then(a).catch((e=>{if(!l)throw e;return a(null,e)}))};
//# sourceMappingURL=retry.min.cjs.map
